on:
  workflow_dispatch:
    inputs:
      test:
        description: 'Input test string'
        required: true
        type: string
      json:
        description: 'Input test json'
        required: true
        type: string

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Set and mask variable
        run: |
          #cat $GITHUB_EVENT_PATH
          JSON_TEST=$(jq -r '.inputs.json' $GITHUB_EVENT_PATH)
          TEST=$(jq -r '.inputs.test' $GITHUB_EVENT_PATH)
          echo "JSON test value before mask: $JSON_TEST"
          echo "Test value before mask: $TEST"
          echo "::add-mask::$JSON_TEST"
          echo "::add-mask::$TEST"
          echo "JSON test value after mask: $JSON_TEST"
          echo "Test value after mask: $TEST"
          echo "TEST=$JSON_TEST" >> $GITHUB_ENV
          echo "TEST=$TEST" >> $GITHUB_ENV

#  set the input as a var using fromjsonloads syntax
#  mask the var created
#  call an action passing the masked var
#  have the action
#    setup go
#    run a go script using the masked var
#   echo "ENV_VAR=${{ fromJson(inputs.test-json).test }}" >> $GITHUB_ENV